using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using WindowsFormsApp4_Contacts.Services;
using WindowsFormsApp4_Contacts.Repository;
using System.Data.SqlClient;

namespace WindowsFormsApp4_Contacts
{
    public partial class Form1 : Form
    {
        IContactsRepository Repository;//چرا اینجا نمونه ساختیم و پایین پولیمورفیسم چرا همه رو یک جا نه؟ اینجا نمونه ساختمیم چون اگه در بلاک کانستراکتور فرم نمونه ساخته بودیم فقط در بلاک کانستراکتور فرم بهش دسترسی داشتیم نه در تمام کلاس. چون فقط در ان بلاک قابل دسترسی بود . دو چرا پولی مورفیسم در پایین است در بلاک کانستراکتورزیرا در هنگامی که باز میشود قبل لود شدن ، کانستراکتور فرم اجرا میشود . که در انجا یک نمونه از کلاس کانتکت ریپوزیتوری برای ریپوزیتوری اینترفیس بسازد که همه چی اماده باشد مانن اینیشیال کامپوننت که کامپوننت های روی صفحه را میسازد قبل از اینکه هر کدام از کامپوننت ها مانند دیتا گرید ویو کار کنند 

        public Form1()
        {
            InitializeComponent();
            Repository = new ContactsRepository();          
        }

        public void DGVBullder()
        {
            dgContactsList.AutoGenerateColumns = false;//این دستور اجازه ساخت سطون های دیتا گرید ویو را به صورت پیش فرز بر اساس تیبل درون دیتا بیسمان را نمیدهد. باقی دستورات مورد نیاز برای عملایتی شدن منظور این کد در کامنت پایینی است

            //پس برای اد کردن سطون ها به دیزاین فرم رفته و سپس روی فلش کوچیکه میزنیم و در منوی باز شده انتخاب میکنیم ادیت کلامنز و در منوی باز شده کلامنز را اد میکنیم با دکمه اد. در منوی باز شده گزینه ای به نام نیم وجود دارد و درواقع اسمی هست که ویژوال استدیو از ان استفاده میکند پس نباید اسم هم نام با اسم هایی که در سلوشن داریم انتخاب کنیم . گزینه بعدی تایپ این سطون هست که پیش فرض تکست باکس برای دیتا گرید ویو است. اخرین گزینه انتخاب نیم برای هدر این بخش هست نام دلخواهی است که میخواهیم در عنوان هر سطون دیده شود. بعد در پنجره باند کلام پراپرتیز در قسمت دیتا و سپس دیتا پراپرتی نیم مشخص میکنیم که این سطون درواقع جایگاه کدام سطون در دیتا بیس مورد نظرمان است که در ان اطلاعات زخیره شده است. برای پر کردن دیتا گرید ویو با تعداد سطون هایی که ساختیم از پراپرتی های دیتا گرید ویو پرارپتی اتوسایز کلامنز مود را بر روی فیل میگذاریم. اگر میخواهیم که کل فرم راست به چپ باشد پراپرتی رایت تو لفت فرم را یس میگذاریم در غیر اینصورت برای راست به چپ شدن هر تولزی که دلخواه بود از پراپرتی راست به چپ خود ان تولز استفاده میکنیم. کلامنز ها در دیتا گرید ویو به صورت پیش فرض قابلیت ادیت حذف و اضافه کردن مورد های جدید به زیر هر سطون و حتی ردیف را دارا هستند که تحت کنتل داشتن برنامه را از دست ما خارج میکند پس بعد از باز کردن فلش کوچک دیتا گرید ویو گزینه های انیبل ادینگ و انیبل و غیره را تیکش را بر میداریم و یا شاید حتی گذاشتیم تیکش را که این کار از بخش پراپرتی های خود دیتا گرید ویو هم در دسترس است و

            dgContactsList.Columns[0].Visible = false; //سطون شناسه نامرعی شد

            dgContactsList.DataSource = Repository.SelectAll();//دیتا سورس در این جا برای تولز هایی که با دیتا سرو کار دارند در دسترس است که برای مدیریت اطلاعات است درواقع منبع داده ای هست که دارند تا اطلاعاتی را که به دست میاورند را در جایی زخیره کنند که مساوی است با این متد سلکت ال در کلاس ریپوزیتوری که دیتا برمیگرداند که در دیتاسورس زخیره میکنیم 
            //میگه که دیتا سورس سورس دیتا را برای دیتا گرید ویو مشخص میکند
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            DGVBullder();//از اسول شی گرایی این هست که کد را تکرار نکنیم
            // پس کدمان را تبدیل به متد دیجیوی بیلدر کردیم با استفاده از سلکت کردن خط های کد و زدن دکمه ریفکتورینگ و اکسترکت متد. یک متد میسازد ودر جایی که ان خط کد را سلکت کردیم متد را صدا میزند و از ما میخواهد که برای متدمان نام بذاریم 
        }

        private void btnRefresh_Click(object sender, EventArgs e)
        {
            DGVBullder();
        }

        private void btnAddContact_Click(object sender, EventArgs e)
        {
            frmAddOrEdit FormAddOrEdit = new frmAddOrEdit();

            //FormAddOrEdit.Show();//فرمی که ازش نمونه ساختیم را با دستور دات شو نشان میدهیمش ولی همچنان به فرم قبلی هم دسترسی داریم و میتوانیم چندین بار دکمه را فشار دهیم و این فرم را صدا کنیم.

            FormAddOrEdit.ShowDialog();//این دستور برخلاف کد بالا فقط یک نمونه باز میکند و دیگر نمیگذارد به فرم قبلی دسترسی داشته باشیم تا زمانی که این فرم باز هست. تازمانی باز هست و به فرم زیردسترسی نداریم که ریزالت و نتیجه ای را برگردانیم یعنی ضربدری بزنیم جواب یس بدهیم اوکی بدهیم کنسل کنیم نه بگوییم که برنامه دستوری رو به عنوان دیالوگ ریزالت برگرداند           

            if (FormAddOrEdit.DialogResult == DialogResult.OK) //یعنی اگر نتیجه فرمی که باز کردم اوکی بود
            {
                DGVBullder();
            }
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            string Name = dgContactsList.CurrentRow.Cells[1].Value.ToString();//کورنت رو همان ردیفیست که همش یا قسمتی از ان در دیتا گرید انتخاب شده است. سلز هم به خانه مورد نظر مربوط است که با توجه به راست به چپ بودن فرم یا چپ به راست بودن فرم شروع به شمارش میکنیم از صفر . ولیو هم مقدار درون خانه انتخاب شده است  
            string Family = dgContactsList.CurrentRow.Cells[2].Value.ToString();
            string FullName = Name + " " + Family;

            if (dgContactsList.CurrentRow != null)
            {
                if (MessageBox.Show($"حذف شود؟ {FullName}", "تذکر", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    int ContactID = (int)dgContactsList.CurrentRow.Cells[0].Value;//دلیل کانتکت ای دی اینه که راه شناسایی هست چون همیشه هست و منحصر به فرد است
                    Repository.Delete(ContactID);
                    DGVBullder();
                }
            }
            else
            {
                MessageBox.Show("یک ردیف افقی انتخاب کنید برای حذف کردن", "خطا", MessageBoxButtons.OK);
            }
        }

        private void btnEdit_Click(object sender, EventArgs e)
        {
            string Name = dgContactsList.CurrentRow.Cells[1].Value.ToString();
            string Family = dgContactsList.CurrentRow.Cells[2].Value.ToString();
            string FullName = Name + " " + Family;

            if (dgContactsList.CurrentRow != null)
            {
                if (MessageBox.Show($"ویرایش شود؟ {FullName}", "تذکر", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    int ContactID = (int)dgContactsList.CurrentRow.Cells[0].Value;
                    frmAddOrEdit FormAddOrEdit = new frmAddOrEdit();//یه فرم جدید باید بسازیم
                    FormAddOrEdit.ContactID = ContactID;
                    FormAddOrEdit.ShowDialog();
                    if (FormAddOrEdit.DialogResult == DialogResult.OK)
                    {
                        DGVBullder();
                    }
                }
            }
            else
            {
                MessageBox.Show("یک ردیف افقی انتخاب کنید برای ویرایش کردن", "خطا", MessageBoxButtons.OK);
            }
        }

        private void txtSearch_TextChanged(object sender, EventArgs e)//در رویداد تکست چینج که همون موقع که مینویسیم فیلتر کنه
        {
            dgContactsList.AutoGenerateColumns = false;//این دستور اجازه ساخت سطون های دیتا گرید ویو را به صورت پیش فرز بر اساس تیبل درون دیتا بیسمان را نمیدهد. باقی دستورات مورد نیاز برای عملایتی شدن منظور این کد در کامنت پایینی است

            //پس برای اد کردن سطون ها به دیزاین فرم رفته و سپس روی فلش کوچیکه میزنیم و در منوی باز شده انتخاب میکنیم ادیت کلامنز و در منوی باز شده کلامنز را اد میکنیم با دکمه اد. در منوی باز شده گزینه ای به نام نیم وجود دارد و درواقع اسمی هست که ویژوال استدیو از ان استفاده میکند پس نباید اسم هم نام با اسم هایی که در سلوشن داریم انتخاب کنیم . گزینه بعدی تایپ این سطون هست که پیش فرض تکست باکس برای دیتا گرید ویو است. اخرین گزینه انتخاب نیم برای هدر این بخش هست نام دلخواهی است که میخواهیم در عنوان هر سطون دیده شود. بعد در پنجره باند کلام پراپرتیز در قسمت دیتا و سپس دیتا پراپرتی نیم مشخص میکنیم که این سطون درواقع جایگاه کدام سطون در دیتا بیس مورد نظرمان است که در ان اطلاعات زخیره شده است. برای پر کردن دیتا گرید ویو با تعداد سطون هایی که ساختیم از پراپرتی های دیتا گرید ویو پرارپتی اتوسایز کلامنز مود را بر روی فیل میگذاریم. اگر میخواهیم که کل فرم راست به چپ باشد پراپرتی رایت تو لفت فرم را یس میگذاریم در غیر اینصورت برای راست به چپ شدن هر تولزی که دلخواه بود از پراپرتی راست به چپ خود ان تولز استفاده میکنیم. کلامنز ها در دیتا گرید ویو به صورت پیش فرض قابلیت ادیت حذف و اضافه کردن مورد های جدید به زیر هر سطون و حتی ردیف را دارا هستند که تحت کنتل داشتن برنامه را از دست ما خارج میکند پس بعد از باز کردن فلش کوچک دیتا گرید ویو گزینه های انیبل ادینگ و انیبل و غیره را تیکش را بر میداریم و یا شاید حتی گذاشتیم تیکش را که این کار از بخش پراپرتی های خود دیتا گرید ویو هم در دسترس است و

            dgContactsList.Columns[0].Visible = false;

            dgContactsList.DataSource = Repository.Search(txtSearch.Text);//دیتا سورس در این جا برای تولز هایی که با دیتا سرو کار دارند در دسترس است که برای مدیریت اطلاعات است درواقع منبع داده ای هست که دارند تا اطلاعاتی را که به دست میاورند را در جایی زخیره کنند که مساوی است با این متد سلکت ال در کلاس ریپوزیتوری که دیتا برمیگرداند که در دیتاسورس زخیره میکنیم 
        }
    }
}
